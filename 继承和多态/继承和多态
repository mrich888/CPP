继承:
类的方法不占内存空间

⭐继承的成员保护权限在两个类中的权限取最小值:
    protected:子类内部、当前类内部可以访问;
    public >  protected >private

⭐非虚继承:从内存分布(地址空间)可以看出，父类成员在子类成员的前面

  -- 先有父再有子

⭐子类可以继承父类的哪些东西:
    1、非私有的成员变量  -- 私有成员变量只能通过父类提供的共有函数进行访问
    2、菲私有的成员函数  --子类可以直接调用父类的成员函数,也可以在子类中重新定义这些函数 -- 将加上vritual关键字编程虚函数
    3、构造函数和析构函数  --子类的构造函数默认会调用父类的【无参】构造函数来初始化从父类继承的成员变量  -- 析构时,子类先结束,父类再结束  
    4、友元关系 --如果父类的成员函数时子类的友元函数,那么子类也可以访问这些私有成员
    5、虚函数  --子类可以重写父类中的虚函数,实现多态

⭐多态:
    1、子类重写父类的成员函数
    2、父类指针指向子类对象   注意:子类指针指向父类指针是不安全的(通过强转是可以拿到数据的,但子类所占内存更大,会踩内存)
    3、利用父类指针调用重写的成员函数


⭐虚函数: 虚函数的地址存放在虚表中,虚表存在类中并且占用空间
    1、c++中的多态通过虚函数来实现
    2、被virtual修饰的成员变量叫虚函数
    3、调用父类的成员函数实现
    4、只要在父类中声明为虚函数,子类中重写的函数也自动变成虚函数(子类中继承的虚函数可以不加virtual声明)
    5、不同于父类的虚函数和继承父类中的虚函数的地址放在同一个虚表中

⭐虚析构函数:
    1、如果存在父类指针指向子类对象的情况,应将析构函数声明为虚函数
    2、delete父类指针时,才会调用子类的析构函数,保证析构的完整性

